name: ruby
version: "3.3"
summary: Chiseled Ruby 3.3 rock
description: |
  Ruby is a dynamic, high-level, open-source programming language. It features
  a clean syntax that's easy to read and write. Ruby is best known for powering
  the web framework Ruby on Rails, and it supports object-oriented, functional,
  and procedural styles.

  This image is a chiselled Ubuntu rock that contains only the Ruby interpreter
  and its standard dependencies.
license: Ruby
base: bare
# TODO: Update to 25.04 when available
build-base: ubuntu@24.04

run-user: _daemon_

platforms:
  amd64:
  arm64:

environment:
  RUBYOPT: "--disable-did_you_mean --disable-error_highlight --disable-syntax_suggest"
  GEM_PATH: "/usr/lib/ruby/gems/3.3.0/gems:/usr/share/rubygems-integration/all"

parts:
  ruby:
    plugin: nil
    source: https://github.com/cjdcordeiro/chisel-releases.git
    source-type: git
    source-branch: 25.04/ruby
    override-build: |
      chisel cut --release ./ --root ${CRAFT_PART_INSTALL} \
          base-files_base \
          base-files_release-info \
          base-files_chisel \
          ruby_core

  manifest:
    plugin: nil
    after: [ruby]
    build-packages:
        - zstd
        - jq
    override-build: |
        mkdir -p $CRAFT_PART_INSTALL/usr/share/rocks
        FIELDS=(
            '${db:Status-Abbrev}'
            '${binary:Package}'
            '${Version}'
            '${source:Package}'
            '${Source:Version}\n'
        )
        zstd -d -f -q $CRAFT_STAGE/var/lib/chisel/manifest.wall \
            -o $CRAFT_PART_BUILD/manifest

        # Awk fortmat
        awk_script='
        {
            binary=$1
            version=$2
            cmd = "dpkg-query -W -f='\''${source:Package}\n'\'' " binary " | head -n 1"
            if ((cmd | getline source) > 0) {
                print "ii ," binary ":" arch "," version "," source "," version
            }
            close(cmd)
        }'

        # Create security manifest file
        (echo "# os-release" && cat /etc/os-release && echo "# dpkg-query") \
        > $CRAFT_PART_INSTALL/usr/share/rocks/dpkg.query

        # Add packages
        (
            awk -v arch=${CRAFT_ARCH_BUILD_FOR} -F' ' "$awk_script" <<< \
            $(
                jq -r 'select(.kind == "package") | "\(.name) \(.version)"' \
                $CRAFT_PART_BUILD/manifest
            )
        ) >> $CRAFT_PART_INSTALL/usr/share/rocks/dpkg.query

        craftctl default